"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/inflected";
exports.ids = ["vendor-chunks/inflected"];
exports.modules = {

/***/ "(rsc)/./node_modules/inflected/dist/esm/inflected.js":
/*!******************************************************!*\
  !*** ./node_modules/inflected/dist/esm/inflected.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   camelize: () => (/* binding */ camelize),\n/* harmony export */   capitalize: () => (/* binding */ capitalize),\n/* harmony export */   classify: () => (/* binding */ classify),\n/* harmony export */   constantify: () => (/* binding */ constantify),\n/* harmony export */   dasherize: () => (/* binding */ dasherize),\n/* harmony export */   foreignKey: () => (/* binding */ foreignKey),\n/* harmony export */   humanize: () => (/* binding */ humanize),\n/* harmony export */   inflections: () => (/* binding */ inflections),\n/* harmony export */   ordinal: () => (/* binding */ ordinal),\n/* harmony export */   ordinalize: () => (/* binding */ ordinalize),\n/* harmony export */   parameterize: () => (/* binding */ parameterize),\n/* harmony export */   pluralize: () => (/* binding */ pluralize),\n/* harmony export */   singularize: () => (/* binding */ singularize),\n/* harmony export */   tableize: () => (/* binding */ tableize),\n/* harmony export */   titleize: () => (/* binding */ titleize),\n/* harmony export */   transliterate: () => (/* binding */ transliterate),\n/* harmony export */   transliterations: () => (/* binding */ transliterations),\n/* harmony export */   underscore: () => (/* binding */ underscore)\n/* harmony export */ });\nvar toString = Object.prototype.toString;\n\nfunction isFunc(obj) {\n  return toString.call(obj) === \"[object Function]\";\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction icPart(str) {\n  return str.split(\"\").map(function (c) {\n    return \"(?:\" + c.toUpperCase() + \"|\" + c.toLowerCase() + \")\";\n  }).join(\"\");\n}\n\nfunction remove(arr, elem) {\n  for (var i = arr.length - 1; i >= 0; i--) {\n    if (arr[i] === elem) {\n      Array.prototype.splice.call(arr, i, 1);\n    }\n  }\n}\n\nfunction hasProp(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nvar instances = {};\n\nvar Inflector = function () {\n  createClass(Inflector, null, [{\n    key: \"getInstance\",\n    value: function getInstance(locale) {\n      instances[locale] = instances[locale] || new Inflector();\n      return instances[locale];\n    }\n  }]);\n\n  function Inflector() {\n    classCallCheck(this, Inflector);\n\n    this.plurals = [];\n    this.singulars = [];\n    this.uncountables = [];\n    this.humans = [];\n    this.acronyms = {};\n    this.acronymRegex = /(?=a)b/;\n  }\n\n  createClass(Inflector, [{\n    key: \"acronym\",\n    value: function acronym(word) {\n      this.acronyms[word.toLowerCase()] = word;\n\n      var values = [];\n\n      for (var key in this.acronyms) {\n        if (hasProp(this.acronyms, key)) {\n          values.push(this.acronyms[key]);\n        }\n      }\n\n      this.acronymRegex = new RegExp(values.join(\"|\"));\n    }\n  }, {\n    key: \"plural\",\n    value: function plural(rule, replacement) {\n      if (typeof rule === \"string\") {\n        remove(this.uncountables, rule);\n      }\n\n      remove(this.uncountables, replacement);\n      this.plurals.unshift([rule, replacement]);\n    }\n  }, {\n    key: \"singular\",\n    value: function singular(rule, replacement) {\n      if (typeof rule === \"string\") {\n        remove(this.uncountables, rule);\n      }\n\n      remove(this.uncountables, replacement);\n      this.singulars.unshift([rule, replacement]);\n    }\n  }, {\n    key: \"irregular\",\n    value: function irregular(singular, plural) {\n      remove(this.uncountables, singular);\n      remove(this.uncountables, plural);\n\n      var s0 = singular[0];\n      var sRest = singular.substr(1);\n\n      var p0 = plural[0];\n      var pRest = plural.substr(1);\n\n      if (s0.toUpperCase() === p0.toUpperCase()) {\n        this.plural(new RegExp(\"(\" + s0 + \")\" + sRest + \"$\", \"i\"), \"$1\" + pRest);\n        this.plural(new RegExp(\"(\" + p0 + \")\" + pRest + \"$\", \"i\"), \"$1\" + pRest);\n\n        this.singular(new RegExp(\"(\" + s0 + \")\" + sRest + \"$\", \"i\"), \"$1\" + sRest);\n        this.singular(new RegExp(\"(\" + p0 + \")\" + pRest + \"$\", \"i\"), \"$1\" + sRest);\n      } else {\n        var sRestIC = icPart(sRest);\n        var pRestIC = icPart(pRest);\n\n        this.plural(new RegExp(s0.toUpperCase() + sRestIC + \"$\"), p0.toUpperCase() + pRest);\n        this.plural(new RegExp(s0.toLowerCase() + sRestIC + \"$\"), p0.toLowerCase() + pRest);\n        this.plural(new RegExp(p0.toUpperCase() + pRestIC + \"$\"), p0.toUpperCase() + pRest);\n        this.plural(new RegExp(p0.toLowerCase() + pRestIC + \"$\"), p0.toLowerCase() + pRest);\n\n        this.singular(new RegExp(s0.toUpperCase() + sRestIC + \"$\"), s0.toUpperCase() + sRest);\n        this.singular(new RegExp(s0.toLowerCase() + sRestIC + \"$\"), s0.toLowerCase() + sRest);\n        this.singular(new RegExp(p0.toUpperCase() + pRestIC + \"$\"), s0.toUpperCase() + sRest);\n        this.singular(new RegExp(p0.toLowerCase() + pRestIC + \"$\"), s0.toLowerCase() + sRest);\n      }\n    }\n  }, {\n    key: \"uncountable\",\n    value: function uncountable() {\n      for (var _len = arguments.length, words = Array(_len), _key = 0; _key < _len; _key++) {\n        words[_key] = arguments[_key];\n      }\n\n      this.uncountables = this.uncountables.concat(words);\n    }\n  }, {\n    key: \"human\",\n    value: function human(rule, replacement) {\n      this.humans.unshift([rule, replacement]);\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"all\";\n\n      if (scope === \"all\") {\n        this.plurals = [];\n        this.singulars = [];\n        this.uncountables = [];\n        this.humans = [];\n      } else {\n        this[scope] = [];\n      }\n    }\n  }]);\n  return Inflector;\n}();\n\nfunction en(inflector) {\n  inflector.plural(/$/, \"s\");\n  inflector.plural(/s$/i, \"s\");\n  inflector.plural(/^(ax|test)is$/i, \"$1es\");\n  inflector.plural(/(octop|vir)us$/i, \"$1i\");\n  inflector.plural(/(octop|vir)i$/i, \"$1i\");\n  inflector.plural(/(alias|status)$/i, \"$1es\");\n  inflector.plural(/(bu)s$/i, \"$1ses\");\n  inflector.plural(/(buffal|tomat)o$/i, \"$1oes\");\n  inflector.plural(/([ti])um$/i, \"$1a\");\n  inflector.plural(/([ti])a$/i, \"$1a\");\n  inflector.plural(/sis$/i, \"ses\");\n  inflector.plural(/(?:([^f])fe|([lr])f)$/i, \"$1$2ves\");\n  inflector.plural(/(hive)$/i, \"$1s\");\n  inflector.plural(/([^aeiouy]|qu)y$/i, \"$1ies\");\n  inflector.plural(/(x|ch|ss|sh)$/i, \"$1es\");\n  inflector.plural(/(matr|vert|ind)(?:ix|ex)$/i, \"$1ices\");\n  inflector.plural(/^(m|l)ouse$/i, \"$1ice\");\n  inflector.plural(/^(m|l)ice$/i, \"$1ice\");\n  inflector.plural(/^(ox)$/i, \"$1en\");\n  inflector.plural(/^(oxen)$/i, \"$1\");\n  inflector.plural(/(quiz)$/i, \"$1zes\");\n\n  inflector.singular(/s$/i, \"\");\n  inflector.singular(/(ss)$/i, \"$1\");\n  inflector.singular(/(n)ews$/i, \"$1ews\");\n  inflector.singular(/([ti])a$/i, \"$1um\");\n  inflector.singular(/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)(sis|ses)$/i, \"$1sis\");\n  inflector.singular(/(^analy)(sis|ses)$/i, \"$1sis\");\n  inflector.singular(/([^f])ves$/i, \"$1fe\");\n  inflector.singular(/(hive)s$/i, \"$1\");\n  inflector.singular(/(tive)s$/i, \"$1\");\n  inflector.singular(/([lr])ves$/i, \"$1f\");\n  inflector.singular(/([^aeiouy]|qu)ies$/i, \"$1y\");\n  inflector.singular(/(s)eries$/i, \"$1eries\");\n  inflector.singular(/(m)ovies$/i, \"$1ovie\");\n  inflector.singular(/(x|ch|ss|sh)es$/i, \"$1\");\n  inflector.singular(/^(m|l)ice$/i, \"$1ouse\");\n  inflector.singular(/(bus)(es)?$/i, \"$1\");\n  inflector.singular(/(o)es$/i, \"$1\");\n  inflector.singular(/(shoe)s$/i, \"$1\");\n  inflector.singular(/(cris|test)(is|es)$/i, \"$1is\");\n  inflector.singular(/^(a)x[ie]s$/i, \"$1xis\");\n  inflector.singular(/(octop|vir)(us|i)$/i, \"$1us\");\n  inflector.singular(/(alias|status)(es)?$/i, \"$1\");\n  inflector.singular(/^(ox)en/i, \"$1\");\n  inflector.singular(/(vert|ind)ices$/i, \"$1ex\");\n  inflector.singular(/(matr)ices$/i, \"$1ix\");\n  inflector.singular(/(quiz)zes$/i, \"$1\");\n  inflector.singular(/(database)s$/i, \"$1\");\n\n  inflector.irregular(\"person\", \"people\");\n  inflector.irregular(\"man\", \"men\");\n  inflector.irregular(\"child\", \"children\");\n  inflector.irregular(\"sex\", \"sexes\");\n  inflector.irregular(\"move\", \"moves\");\n  inflector.irregular(\"zombie\", \"zombies\");\n\n  inflector.uncountable(\"equipment\", \"information\", \"rice\", \"money\", \"species\", \"series\", \"fish\", \"sheep\", \"jeans\", \"police\");\n}\n\nvar defaults$1 = {\n  en: en\n};\n\nfunction inflections(locale, fn) {\n  if (isFunc(locale)) {\n    fn = locale;\n    locale = null;\n  }\n\n  locale = locale || \"en\";\n\n  if (fn) {\n    fn(Inflector.getInstance(locale));\n  } else {\n    return Inflector.getInstance(locale);\n  }\n}\n\nfor (var locale in defaults$1) {\n  inflections(locale, defaults$1[locale]);\n}\n\nfunction applyInflections(word, rules) {\n  var result = \"\" + word,\n      rule,\n      regex,\n      replacement;\n\n  if (result.length === 0) {\n    return result;\n  } else {\n    var match = result.toLowerCase().match(/\\b\\w+$/);\n\n    if (match && inflections().uncountables.indexOf(match[0]) > -1) {\n      return result;\n    } else {\n      for (var i = 0, ii = rules.length; i < ii; i++) {\n        rule = rules[i];\n\n        regex = rule[0];\n        replacement = rule[1];\n\n        if (result.match(regex)) {\n          result = result.replace(regex, replacement);\n          break;\n        }\n      }\n\n      return result;\n    }\n  }\n}\n\nfunction pluralize(word) {\n  var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"en\";\n\n  return applyInflections(word, inflections(locale).plurals);\n}\n\nfunction singularize(word) {\n  var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"en\";\n\n  return applyInflections(word, inflections(locale).singulars);\n}\n\nfunction capitalize(str) {\n  var result = str === null || str === undefined ? \"\" : String(str);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nfunction camelize(term, uppercaseFirstLetter) {\n  if (uppercaseFirstLetter === null || uppercaseFirstLetter === undefined) {\n    uppercaseFirstLetter = true;\n  }\n\n  var result = \"\" + term;\n\n  if (uppercaseFirstLetter) {\n    result = result.replace(/^[a-z\\d]*/, function (a) {\n      return inflections().acronyms[a] || capitalize(a);\n    });\n  } else {\n    result = result.replace(new RegExp(\"^(?:\" + inflections().acronymRegex.source + \"(?=\\\\b|[A-Z_])|\\\\w)\"), function (a) {\n      return a.toLowerCase();\n    });\n  }\n\n  result = result.replace(/(?:_|(\\/))([a-z\\d]*)/gi, function (match, a, b, idx, string) {\n    a || (a = \"\");\n    return \"\" + a + (inflections().acronyms[b] || capitalize(b));\n  });\n\n  return result;\n}\n\nfunction underscore(camelCasedWord) {\n  var result = \"\" + camelCasedWord;\n\n  result = result.replace(new RegExp(\"(?:([A-Za-z\\\\d])|^)(\" + inflections().acronymRegex.source + \")(?=\\\\b|[^a-z])\", \"g\"), function (match, $1, $2) {\n    return \"\" + ($1 || \"\") + ($1 ? \"_\" : \"\") + $2.toLowerCase();\n  });\n\n  result = result.replace(/([A-Z\\d]+)([A-Z][a-z])/g, \"$1_$2\");\n  result = result.replace(/([a-z\\d])([A-Z])/g, \"$1_$2\");\n  result = result.replace(/-/g, \"_\");\n\n  return result.toLowerCase();\n}\n\nfunction humanize(lowerCaseAndUnderscoredWord, options) {\n  var result = \"\" + lowerCaseAndUnderscoredWord;\n  var humans = inflections().humans;\n  var human = void 0,\n      rule = void 0,\n      replacement = void 0;\n\n  options = options || {};\n\n  if (options.capitalize === null || options.capitalize === undefined) {\n    options.capitalize = true;\n  }\n\n  for (var i = 0, ii = humans.length; i < ii; i++) {\n    human = humans[i];\n    rule = human[0];\n    replacement = human[1];\n\n    if (rule.test && rule.test(result) || result.indexOf(rule) > -1) {\n      result = result.replace(rule, replacement);\n      break;\n    }\n  }\n\n  result = result.replace(/_id$/, \"\");\n  result = result.replace(/_/g, \" \");\n\n  result = result.replace(/([a-z\\d]*)/gi, function (match) {\n    return inflections().acronyms[match] || match.toLowerCase();\n  });\n\n  if (options.capitalize) {\n    result = result.replace(/^\\w/, function (match) {\n      return match.toUpperCase();\n    });\n  }\n\n  return result;\n}\n\nfunction titleize(word) {\n  return humanize(underscore(word)).replace(/(^|[\\s¿/]+)([a-z])/g, function (match, boundary, letter, idx, string) {\n    return match.replace(letter, letter.toUpperCase());\n  });\n}\n\nfunction tableize(className) {\n  return pluralize(underscore(className));\n}\n\nfunction classify(tableName) {\n  return camelize(singularize(tableName.replace(/.*\\./g, \"\")));\n}\n\nfunction dasherize(underscoredWord) {\n  return underscoredWord.replace(/_/g, \"-\");\n}\n\nfunction foreignKey(className) {\n  var separateWithUnderscore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  return \"\" + underscore(className) + (separateWithUnderscore ? \"_id\" : \"id\");\n}\n\nfunction ordinal(number) {\n  var absNumber = Math.abs(Number(number));\n  var mod100 = absNumber % 100;\n\n  if (mod100 === 11 || mod100 === 12 || mod100 === 13) {\n    return \"th\";\n  } else {\n    switch (absNumber % 10) {\n      case 1:\n        return \"st\";\n      case 2:\n        return \"nd\";\n      case 3:\n        return \"rd\";\n      default:\n        return \"th\";\n    }\n  }\n}\n\nfunction ordinalize(number) {\n  return \"\" + number + ordinal(number);\n}\n\n// prettier-ignore\nvar DEFAULT_APPROXIMATIONS = {\n  'À': 'A', 'Á': 'A', 'Â': 'A', 'Ã': 'A', 'Ä': 'A', 'Å': 'A', 'Æ': 'AE',\n  'Ç': 'C', 'È': 'E', 'É': 'E', 'Ê': 'E', 'Ë': 'E', 'Ì': 'I', 'Í': 'I',\n  'Î': 'I', 'Ï': 'I', 'Ð': 'D', 'Ñ': 'N', 'Ò': 'O', 'Ó': 'O', 'Ô': 'O',\n  'Õ': 'O', 'Ö': 'O', '×': 'x', 'Ø': 'O', 'Ù': 'U', 'Ú': 'U', 'Û': 'U',\n  'Ü': 'U', 'Ý': 'Y', 'Þ': 'Th', 'ß': 'ss', 'à': 'a', 'á': 'a', 'â': 'a',\n  'ã': 'a', 'ä': 'a', 'å': 'a', 'æ': 'ae', 'ç': 'c', 'è': 'e', 'é': 'e',\n  'ê': 'e', 'ë': 'e', 'ì': 'i', 'í': 'i', 'î': 'i', 'ï': 'i', 'ð': 'd',\n  'ñ': 'n', 'ò': 'o', 'ó': 'o', 'ô': 'o', 'õ': 'o', 'ö': 'o', 'ø': 'o',\n  'ù': 'u', 'ú': 'u', 'û': 'u', 'ü': 'u', 'ý': 'y', 'þ': 'th', 'ÿ': 'y',\n  'Ā': 'A', 'ā': 'a', 'Ă': 'A', 'ă': 'a', 'Ą': 'A', 'ą': 'a', 'Ć': 'C',\n  'ć': 'c', 'Ĉ': 'C', 'ĉ': 'c', 'Ċ': 'C', 'ċ': 'c', 'Č': 'C', 'č': 'c',\n  'Ď': 'D', 'ď': 'd', 'Đ': 'D', 'đ': 'd', 'Ē': 'E', 'ē': 'e', 'Ĕ': 'E',\n  'ĕ': 'e', 'Ė': 'E', 'ė': 'e', 'Ę': 'E', 'ę': 'e', 'Ě': 'E', 'ě': 'e',\n  'Ĝ': 'G', 'ĝ': 'g', 'Ğ': 'G', 'ğ': 'g', 'Ġ': 'G', 'ġ': 'g', 'Ģ': 'G',\n  'ģ': 'g', 'Ĥ': 'H', 'ĥ': 'h', 'Ħ': 'H', 'ħ': 'h', 'Ĩ': 'I', 'ĩ': 'i',\n  'Ī': 'I', 'ī': 'i', 'Ĭ': 'I', 'ĭ': 'i', 'Į': 'I', 'į': 'i', 'İ': 'I',\n  'ı': 'i', 'Ĳ': 'IJ', 'ĳ': 'ij', 'Ĵ': 'J', 'ĵ': 'j', 'Ķ': 'K', 'ķ': 'k',\n  'ĸ': 'k', 'Ĺ': 'L', 'ĺ': 'l', 'Ļ': 'L', 'ļ': 'l', 'Ľ': 'L', 'ľ': 'l',\n  'Ŀ': 'L', 'ŀ': 'l', 'Ł': 'L', 'ł': 'l', 'Ń': 'N', 'ń': 'n', 'Ņ': 'N',\n  'ņ': 'n', 'Ň': 'N', 'ň': 'n', 'ŉ': '\\'n', 'Ŋ': 'NG', 'ŋ': 'ng',\n  'Ō': 'O', 'ō': 'o', 'Ŏ': 'O', 'ŏ': 'o', 'Ő': 'O', 'ő': 'o', 'Œ': 'OE',\n  'œ': 'oe', 'Ŕ': 'R', 'ŕ': 'r', 'Ŗ': 'R', 'ŗ': 'r', 'Ř': 'R', 'ř': 'r',\n  'Ś': 'S', 'ś': 's', 'Ŝ': 'S', 'ŝ': 's', 'Ş': 'S', 'ş': 's', 'Š': 'S',\n  'š': 's', 'Ţ': 'T', 'ţ': 't', 'Ť': 'T', 'ť': 't', 'Ŧ': 'T', 'ŧ': 't',\n  'Ũ': 'U', 'ũ': 'u', 'Ū': 'U', 'ū': 'u', 'Ŭ': 'U', 'ŭ': 'u', 'Ů': 'U',\n  'ů': 'u', 'Ű': 'U', 'ű': 'u', 'Ų': 'U', 'ų': 'u', 'Ŵ': 'W', 'ŵ': 'w',\n  'Ŷ': 'Y', 'ŷ': 'y', 'Ÿ': 'Y', 'Ź': 'Z', 'ź': 'z', 'Ż': 'Z', 'ż': 'z',\n  'Ž': 'Z', 'ž': 'z',\n  'А': 'A', 'Б': 'B', 'В': 'V', 'Г': 'G', 'Д': 'D', 'Е': 'E', 'Ё': 'E',\n  'Ж': 'ZH', 'З': 'Z', 'И': 'I', 'Й': 'J', 'К': 'K', 'Л': 'L', 'М': 'M',\n  'Н': 'N', 'О': 'O', 'П': 'P', 'Р': 'R', 'С': 'S', 'Т': 'T', 'У': 'U',\n  'Ф': 'F', 'Х': 'KH', 'Ц': 'C', 'Ч': 'CH', 'Ш': 'SH', 'Щ': 'SHCH',\n  'Ъ': '', 'Ы': 'Y', 'Ь': '', 'Э': 'E', 'Ю': 'YU', 'Я': 'YA',\n  'а': 'a', 'б': 'b', 'в': 'v', 'г': 'g', 'д': 'd', 'е': 'e', 'ё': 'e',\n  'ж': 'zh', 'з': 'z', 'и': 'i', 'й': 'j', 'к': 'k', 'л': 'l', 'м': 'm',\n  'н': 'n', 'о': 'o', 'п': 'p', 'р': 'r', 'с': 's', 'т': 't', 'у': 'u',\n  'ф': 'f', 'х': 'kh', 'ц': 'c', 'ч': 'ch', 'ш': 'sh', 'щ': 'shch',\n  'ъ': '', 'ы': 'y', 'ь': '', 'э': 'e', 'ю': 'yu', 'я': 'ya'\n};\n\nvar DEFAULT_REPLACEMENT_CHAR = \"?\";\n\nvar instances$1 = {};\n\nvar Transliterator = function () {\n  createClass(Transliterator, null, [{\n    key: 'getInstance',\n    value: function getInstance(locale) {\n      instances$1[locale] = instances$1[locale] || new Transliterator();\n      return instances$1[locale];\n    }\n  }]);\n\n  function Transliterator() {\n    classCallCheck(this, Transliterator);\n\n    this.approximations = {};\n\n    for (var char in DEFAULT_APPROXIMATIONS) {\n      this.approximate(char, DEFAULT_APPROXIMATIONS[char]);\n    }\n  }\n\n  createClass(Transliterator, [{\n    key: 'approximate',\n    value: function approximate(char, replacement) {\n      this.approximations[char] = replacement;\n    }\n  }, {\n    key: 'transliterate',\n    value: function transliterate(string, replacement) {\n      var _this = this;\n\n      return string.replace(/[^\\u0000-\\u007f]/g, function (c) {\n        return _this.approximations[c] || replacement || DEFAULT_REPLACEMENT_CHAR;\n      });\n    }\n  }]);\n  return Transliterator;\n}();\n\nfunction transliterations(locale, fn) {\n  if (isFunc(locale)) {\n    fn = locale;\n    locale = null;\n  }\n\n  locale = locale || \"en\";\n\n  if (fn) {\n    fn(Transliterator.getInstance(locale));\n  } else {\n    return Transliterator.getInstance(locale);\n  }\n}\n\nfunction transliterate(string) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var locale = options.locale || \"en\";\n  var replacement = options.replacement || \"?\";\n\n  return transliterations(locale).transliterate(string, replacement);\n}\n\nfunction parameterize(string) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (options.separator === undefined) {\n    options.separator = \"-\";\n  }\n\n  if (options.separator === null) {\n    options.separator = \"\";\n  }\n\n  // replace accented chars with their ascii equivalents\n  var result = transliterate(string, options);\n\n  result = result.replace(/[^a-z0-9\\-_]+/ig, options.separator);\n\n  if (options.separator.length) {\n    var separatorRegex = new RegExp(options.separator);\n\n    // no more than one of the separator in a row\n    result = result.replace(new RegExp(separatorRegex.source + \"{2,}\"), options.separator);\n\n    // remove leading/trailing separator\n    result = result.replace(new RegExp(\"^\" + separatorRegex.source + \"|\" + separatorRegex.source + \"$\", \"i\"), \"\");\n  }\n\n  if (options.preserveCase) {\n    return result;\n  }\n\n  return result.toLowerCase();\n}\n\nfunction constantify(word) {\n  return underscore(word).toUpperCase().replace(/\\s+/g, \"_\");\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/inflected/dist/esm/inflected.js\n");

/***/ })

};
;